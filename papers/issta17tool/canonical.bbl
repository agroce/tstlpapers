% Generated by IEEEtran.bst, version: 1.12 (2007/01/11)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{DD}
A.~Zeller and R.~Hildebrandt, ``Simplifying and isolating failure-inducing
  input,'' \emph{Software Engineering, IEEE Transactions on}, vol.~28, no.~2,
  pp. 183--200, 2002.

\bibitem{MinUnit}
Y.~Lei and J.~H. Andrews, ``Minimization of randomized unit test cases,'' in
  \emph{International Symposium on Software Reliability Engineering}, 2005, pp.
  267--276.

\bibitem{ICSEDiff}
A.~Groce, G.~Holzmann, and R.~Joshi, ``Randomized differential testing as a
  prelude to formal verification,'' in \emph{International Conference on
  Software Engineering}, 2007, pp. 621--631.

\bibitem{PLDI13}
Y.~Chen, A.~Groce, C.~Zhang, W.-K. Wong, X.~Fern, E.~Eide, and J.~Regehr,
  ``Taming compiler fuzzers,'' in \emph{ACM SIGPLAN Conference on Programming
  Language Design and Implementation}, 2013, pp. 197--208.

\bibitem{NFM15}
A.~Groce and J.~Pinto, ``A little language for testing,'' in \emph{NASA Formal
  Methods Symposium}, 2015, pp. 204--218.

\bibitem{ISSTA15}
A.~Groce, J.~Pinto, P.~Azimi, and P.~Mittal, ``{TSTL}: a language and tool for
  testing (demo),'' in \emph{ACM International Symposium on Software Testing
  and Analysis}, 2015, pp. 414--417.

\bibitem{AndrewsTR}
J.~Andrews, Y.~R. Zhang, and A.~Groce, ``Comparing automated unit testing
  strategies,'' Department of Computer Science, University of Western Ontario,
  Tech. Rep. 736, December 2010.

\bibitem{icst2014}
A.~Groce, M.~A. Alipour, C.~Zhang, Y.~Chen, and J.~Regehr, ``Cause reduction
  for quick testing,'' in \emph{Software Testing, Verification and Validation
  (ICST), 2014 IEEE Seventh International Conference on}.\hskip 1em plus 0.5em
  minus 0.4em\relax IEEE, 2014, pp. 243--252.

\bibitem{Lev}
V.~I. Levenshtein, ``Binary codes capable of correcting deletions, insertions,
  and reversals,'' \emph{Soviet Physics Doklady}, vol.~10, pp. 707--710, 1966.

\bibitem{TCminim}
A.~Leitner, M.~Oriol, A.~Zeller, I.~Ciupa, and B.~Meyer, ``Efficient unit test
  case minimization,'' in \emph{International Conference on Automated Software
  Engineering}, 2007, pp. 417--420.

\bibitem{SaiSimple}
\BIBentryALTinterwordspacing
S.~Zhang, ``Practical semantic test simplification,'' in \emph{Proceedings of
  the 2013 International Conference on Software Engineering}, ser. ICSE
  '13.\hskip 1em plus 0.5em minus 0.4em\relax Piscataway, NJ, USA: IEEE Press,
  2013, pp. 1173--1176. [Online]. Available:
  \url{http://dl.acm.org/citation.cfm?id=2486788.2486953}
\BIBentrySTDinterwordspacing

\bibitem{CReduce}
J.~Regehr, Y.~Chen, P.~Cuoq, E.~Eide, C.~Ellison, and X.~Yang, ``Test-case
  reduction for {C} compiler bugs,'' in \emph{Conference on Programming
  Language Design and Implementation}, 2012, pp. 335--346.

\bibitem{Guava}
E.~Daka, J.~Campos, J.~Dorn, G.~Fraser, and W.~Weimer, ``Generating readable
  unit tests for guava,'' in \emph{Search-Based Software Engineering - 7th
  International Symposium, {SSBSE} 2015, Bergamo, Italy, September 5-7, 2015,
  Proceedings}, 2015, pp. 235--241.

\bibitem{Readable}
E.~Daka, J.~Campos, G.~Fraser, J.~Dorn, and W.~Weimer, ``Modeling readability
  to improve unit tests,'' in \emph{Proceedings of the 2015 10th Joint Meeting
  on Foundations of Software Engineering, {ESEC/FSE} 2015, Bergamo, Italy,
  August 30 - September 4, 2015}, 2015, pp. 107--118.

\bibitem{Daikon}
M.~Ernst, J.~Cockrell, W.~Griswold, and D.~Notkin, ``Dynamically discovering
  likely program invariants to support program evolution,'' in \emph{Int.
  Conference on Software Engineering}, 1999, pp. 213--224.

\end{thebibliography}
