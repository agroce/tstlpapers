% Generated by IEEEtran.bst, version: 1.12 (2007/01/11)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{DD}
A.~Zeller and R.~Hildebrandt, ``Simplifying and isolating failure-inducing
  input,'' \emph{Software Engineering, IEEE Transactions on}, vol.~28, no.~2,
  pp. 183--200, 2002.

\bibitem{MinUnit}
Y.~Lei and J.~H. Andrews, ``Minimization of randomized unit test cases,'' in
  \emph{International Symposium on Software Reliability Engineering}, 2005, pp.
  267--276.

\bibitem{TCminim}
A.~Leitner, M.~Oriol, A.~Zeller, I.~Ciupa, and B.~Meyer, ``Efficient unit test
  case minimization,'' in \emph{International Conference on Automated Software
  Engineering}, 2007, pp. 417--420.

\bibitem{ICSEDiff}
A.~Groce, G.~Holzmann, and R.~Joshi, ``Randomized differential testing as a
  prelude to formal verification,'' in \emph{International Conference on
  Software Engineering}, 2007, pp. 621--631.

\bibitem{SoftBET}
D.~Coppit, J.~Yang, S.~Khurshid, W.~Le, and K.~Sullivan, ``Software assurance
  by bounded exhaustive testing,'' \emph{IEEE Transactions on Software
  Engineering}, vol.~31, no.~4, pp. 328--339, Apr. 2005.

\bibitem{FA11}
G.~Fraser and A.~Arcuri, ``{EvoSuite}: automatic test suite generation for
  object-oriented software,'' in \emph{Proceedings of the 19th ACM SIGSOFT
  Symposium and the 13th European Conference on Foundations of Software
  Engineering}, ser. ESEC/FSE '11.\hskip 1em plus 0.5em minus 0.4em\relax ACM,
  2011, pp. 416--419.

\bibitem{RandFormal}
A.~Arcuri, M.~Z.~Z. Iqbal, and L.~C. Briand, ``Formal analysis of the
  effectiveness and predictability of random testing,'' in \emph{International
  Symposium on Software Testing and Analysis}, 2010, pp. 219--230.

\bibitem{HamletOnly}
R.~Hamlet, ``When only random testing will do,'' in \emph{International
  Workshop on Random Testing}, 2006, pp. 1--9.

\bibitem{Gastin04minimizationof}
P.~Gastin, P.~Moro, and M.~Zeitoun, ``Minimization of counterexamples in
  {SPIN},'' in \emph{SPIN Workshop on Model Checking of Software}.\hskip 1em
  plus 0.5em minus 0.4em\relax Springer-Verlag, 2004, pp. 92--108.

\bibitem{issta14}
C.~Zhang, A.~Groce, and M.~A. Alipour, ``Using test case reduction and
  prioritization to improve symbolic execution,'' in \emph{International
  Symposium on Software Testing and Analysis}, 2014, pp. 160--170.

\bibitem{jsfunfuzz}
J.~Ruderman, ``Introducing jsfunfuzz,'' 2007,
  \url{http://www.squarefree.com/2007/08/02/introducing-jsfunfuzz/}.

\bibitem{jsfunfuzz2}
------, ``Releasing jsfunfuzz and {DOMFuzz},''
  \url{https://www.squarefree.com/2015/07/28/releasing-jsfunfuzz-and-domfuzz/},
  2015.

\bibitem{lithium}
------, ``Bug 329066 - {Lithium}, a testcase reduction tool (delta debugger),''
  \url{https://bugzilla.mozilla.org/show_bug.cgi?id=329066}, 2006.

\bibitem{PLDI13}
Y.~Chen, A.~Groce, C.~Zhang, W.-K. Wong, X.~Fern, E.~Eide, and J.~Regehr,
  ``Taming compiler fuzzers,'' in \emph{ACM SIGPLAN Conference on Programming
  Language Design and Implementation}, 2013, pp. 197--208.

\bibitem{SmartCheck}
L.~Pike, ``{SmartCheck}: automatic and efficient counterexample reduction and
  generalization,'' in \emph{{ACM} {SIGPLAN} Symposium on Haskell}, 2014, pp.
  53--64.

\bibitem{MakeMost}
A.~Groce and D.~Kroening, ``Making the most of {BMC} counterexamples,''
  \emph{Electron. Notes Theor. Comput. Sci.}, vol. 119, no.~2, pp. 67--81, Mar.
  2005.

\bibitem{csmith}
X.~Yang, Y.~Chen, E.~Eide, and J.~Regehr, ``Finding and understanding bugs in
  {C} compilers,'' in \emph{ACM SIGPLAN Conference on Programming Language
  Design and Implementation}, 2011, pp. 283--294.

\bibitem{tstl}
A.~Groce, J.~Pinto, P.~Azimi, P.~Mittal, J.~Holmes, and K.~Kellar, ``{TSTL}:
  the template scripting testing language,''
  \url{https://github.com/agroce/tstl}.

\bibitem{NFM15}
A.~Groce and J.~Pinto, ``A little language for testing,'' in \emph{NASA Formal
  Methods Symposium}, 2015, pp. 204--218.

\bibitem{ISSTA15}
A.~Groce, J.~Pinto, P.~Azimi, and P.~Mittal, ``{TSTL}: a language and tool for
  testing (demo),'' in \emph{ACM International Symposium on Software Testing
  and Analysis}, 2015, pp. 414--417.

\bibitem{Fow10}
M.~Fowler, \emph{{Domain-Specific Languages}}.\hskip 1em plus 0.5em minus
  0.4em\relax Addison-Wesley Professional, 2010.

\bibitem{AndrewsTR}
J.~Andrews, Y.~R. Zhang, and A.~Groce, ``Comparing automated unit testing
  strategies,'' Department of Computer Science, University of Western Ontario,
  Tech. Rep. 736, December 2010.

\bibitem{icst2014}
A.~Groce, M.~A. Alipour, C.~Zhang, Y.~Chen, and J.~Regehr, ``Cause reduction
  for quick testing,'' in \emph{IEEE International Conference on Software
  Testing, Verification and Validation}.\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2014, pp. 243--252.

\bibitem{Lev}
V.~I. Levenshtein, ``Binary codes capable of correcting deletions, insertions,
  and reversals,'' \emph{Soviet Physics Doklady}, vol.~10, pp. 707--710, 1966.

\bibitem{AMAI}
A.~Groce, K.~Havelund, G.~Holzmann, R.~Joshi, and R.-G. Xu, ``Establishing
  flight software reliability: Testing, model checking, constraint-solving,
  monitoring and learning,'' \emph{Annals of Mathematics and Artificial
  Intelligence}, vol.~70, no.~4, pp. 315--349, 2014.

\bibitem{z3}
L.~M. de~Moura and N.~Bj{\o}rner, ``{Z3:} an efficient {SMT} solver,'' in
  \emph{Tools and Algorithms for the Construction and Analysis of Systems},
  2008, pp. 337--340.

\bibitem{avltree}
user1689822, ``python {AVL} tree insertion,''
  \url{http://stackoverflow.com/questions/12537986/python-avl-tree-insertion}.

\bibitem{cloc}
A.~Danial, ``{CLOC}: Count lines of code,''
  \url{https://github.com/AlDanial/cloc}.

\bibitem{mutant}
J.~H. Andrews, L.~C. Briand, and Y.~Labiche, ``Is mutation an appropriate tool
  for testing experiments?'' in \emph{International Conference on Software
  Engineering}, 2005, pp. 402--411.

\bibitem{Hunter:2007}
J.~D. Hunter, ``Matplotlib: A 2d graphics environment,'' \emph{Computing In
  Science \& Engineering}, vol.~9, no.~3, pp. 90--95, 2007.

\bibitem{mutpy}
K.~Halas, ``{MutPy} 0.4.0,'' \url{https://pypi.python.org/pypi/MutPy/0.4.0}.

\bibitem{myxml}
erezbibi, \url{https://pypi.python.org/pypi/my_xml/0.1.1}.

\bibitem{NumPy}
``{NumPy},'' \url{http://www.numpy.org}.

\bibitem{ArcPy}
``What is {ArcPy}?''
  \url{http://resources.arcgis.com/EN/HELP/MAIN/10.1/index.html#//000v000000v7000000}.

\bibitem{stvrcausereduce}
A.~Groce, M.~A. Alipour, C.~Zhang, Y.~Chen, and J.~Regehr, ``Cause reduction:
  Delta-debugging, even without bugs,'' \emph{Journal of Software Testing,
  Verification, and Reliability}, accepted for publication.

\bibitem{SaiSimple}
S.~Zhang, ``Practical semantic test simplification,'' in \emph{International
  Conference on Software Engineering}, 2013, pp. 1173--1176.

\bibitem{CReduce}
J.~Regehr, Y.~Chen, P.~Cuoq, E.~Eide, C.~Ellison, and X.~Yang, ``Test-case
  reduction for {C} compiler bugs,'' in \emph{ACM SIGPLAN Conference on
  Programming Language Design and Implementation}, 2012, pp. 335--346.

\bibitem{Guava}
E.~Daka, J.~Campos, J.~Dorn, G.~Fraser, and W.~Weimer, ``Generating readable
  unit tests for {Guava},'' in \emph{Search-Based Software Engineering - 7th
  International Symposium, {SSBSE} 2015, Bergamo, Italy, September 5-7, 2015,
  Proceedings}, 2015, pp. 235--241.

\bibitem{Readable}
E.~Daka, J.~Campos, G.~Fraser, J.~Dorn, and W.~Weimer, ``Modeling readability
  to improve unit tests,'' in \emph{Foundations of Software Engineering,
  {ESEC/FSE}}, 2015, pp. 107--118.

\bibitem{Daikon}
M.~Ernst, J.~Cockrell, W.~Griswold, and D.~Notkin, ``Dynamically discovering
  likely program invariants to support program evolution,'' in
  \emph{International Conference on Software Engineering}, 1999, pp. 213--224.

\bibitem{FreeWill}
H.~Jin, K.~Ravi, and F.~Somenzi, ``Fate and free will in error traces,'' in
  \emph{Tools and Algorithms for the Construction and Analysis of Systems},
  2002, pp. 445--458.

\bibitem{SPIN03}
A.~Groce and W.~Visser, ``What went wrong: Explaining counterexamples,'' in
  \emph{SPIN Workshop on Model Checking of Software}, 2003, pp. 121--135.

\end{thebibliography}
